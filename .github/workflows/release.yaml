name: Deploy project

on:
  pull_request:
    types: [closed]

jobs:
  merge-jobs:
    runs-on: ubuntu-latest
    container:
      image: salesforce/cli:latest-slim
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Installing sfdx git delta"
        run: |
          echo y | sf plugins:install sfdx-git-delta
          sf plugins

      - name: "Populate auth file with SFDX_URL secret of pipelinesorg org"
        run: |
          echo ${{ secrets.SFDX_AUTH_URL}} > ./authFile.txt

      # Authenticate to org using the URL stored in the text file
      - name: "Authenticate to pipelinesorg Org"
        run: sf org login sfdx-url --sfdx-url-file authFile.txt
            
      - name: 'Deploy'
        run: |
          sf project deploy start -d force-app --target-org "dummypipelinetestingorg@abcd.com"  

      - name: "Populate auth file with SFDX_URL secret of miltonOrg org"
        run: |
          echo ${{ secrets.SFDX_AUTH_URL2}} > ./authFile2.txt

      # Authenticate to org using the URL stored in the text file
      - name: "Authenticate to miltonOrg Org"
        run: sf org login sfdx-url --sfdx-url-file authFile2.txt
          
      - name: 'Deploy to Dev'
        run: |
          sf project deploy start -d force-app --target-org "klomax@abcd.com" 

      # We use SFDX Git Delta to create a directory with only the metadata that has changed.
      # this allows us to deploy only those changes, as opposed to deploying the entire branch.
      # This helps reducing deployment times
      - name: "Create delta packages for new, modified or deleted metadata"
        run: |
          mkdir changed-sources
          sf sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      - name: "Deploy Delta Changes - Dry Run - No Tests Run"
        run: |
          sf project deploy start -x changed-sources/package/package.xml --post-destructive-changes changed-sources/destructiveChanges/destructiveChanges.xml -l NoTestRun --json
